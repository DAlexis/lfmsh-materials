#ifndef USERINTERFACE_HPP
#define USERINTERFACE_HPP

#include "book.hpp"

/**
 * @brief Основной класс, который предоставляет доступ к записной книжке
 *        ЗАДАНИЕ:
 *        * Реализовать недостающие функции
 */
class UserInterface
{
public:
    /**
     * @brief Эта функция должна вывести на экран приглашение ввести команду, например так
     *        > _
     *        Должны поддерживаться следующие команды:
     *         * add - добавить новую запись
     *         * edit - отпредактировать существующую запись
     *         * print - напечатать всю инфу о пользователе (имя запросить отдельно)
     *         * delete - узвдить запись
     *         * exit - пока
     *        Для продвинутых :)
     *         * save - сохранить всё в файл
     *         * load - загрузить всё из файла
     * @return если возвращается true - то продолжаем работать. А если false - то значит пользователь
     *         написал exit, и выход
     */
    bool prompt();

    /**
     * @brief Функция в цикле вызывает prompt() до тех пор, пока она возвращает положительный результат
     */
    void prompt_loop();

private:
    /**
     * @brief Эта функция будедет вызываться, когда пользователь выбрал команду add
     */
    void add_new_record();

    void edit_record();
    void print_record();
    void delete_record();

    Book m_book;
};

#endif // USERINTERFACE_HPP
